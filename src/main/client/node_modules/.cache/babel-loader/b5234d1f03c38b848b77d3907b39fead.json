{"ast":null,"code":"import _classCallCheck from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/src/components/views/Donate/InformationForm.js\";\nimport React, { Component } from 'react';\nimport { Button, Form } from 'react-bootstrap';\n\nvar InformationForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InformationForm, _Component);\n\n  function InformationForm(props) {\n    var _this;\n\n    _classCallCheck(this, InformationForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InformationForm).call(this, props));\n    _this.statesFull = [\"ALABAMA\", \"ALASKA\", \"ARIZONA\", \"ARKANSAS\", \"CALIFORNIA\", \"COLORADO\", \"CONNECTICUT\", \"DELAWARE\", \"FLORIDA\", \"GEORGIA\", \"HAWAII\", \"IDAHO\", \"ILLINOIS\", \"INDIANA\", \"IOWA\", \"KANSAS\", \"KENTUCKY\", \"LOUISIANA\", \"MAINE\", \"MARYLAND\", \"MASSACHUSETTS\", \"MICHIGAN\", \"MINNESOTA\", \"MISSISSIPPI\", \"MISSOURI\", \"MONTANA\", \"NEBRASKA\", \"NEVADA\", \"NEW HAMPSHIRE\", \"NEW JERSEY\", \"NEW MEXICO\", \"NEW YORK\", \"NORTH CAROLINA\", \"NORTH DAKOTA\", \"OHIO\", \"OKLAHOMA\", \"OREGON\", \"PENNSYLVANIA\", \"RHODE ISLAND\", \"SOUTH CAROLINA\", \"SOUTH DAKOTA\", \"TENNESSEE\", \"TEXAS\", \"UTAH\", \"VERMONT\", \"VIRGINIA\", \"WASHINGTON\", \"WEST VIRGINIA\", \"WISCONSIN\", \"WYOMING\", \"WASHINGTON DC\", \"WASHINGTON D.C.\", \"DISTRICT OF COLUMBIA\", \"AMERICAN SAMOA\", \"SAMOA\", \"GUAM\", \"NORTHERN MARIANA ISLANDS\", \"NORTHERN MARIANA\", \"MARIANA ISLANDS\", \"MARIANA\", \"PUERTO RICO\", \"VIRGIN ISLANDS\", \"VIRGIN\"];\n    _this.statesAbbr = [\"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\", \"AS\", \"DC\", \"GU\", \"MP\", \"PR\", \"VI\"];\n    _this.state = {\n      validated: false,\n      name: '',\n      addr1: '',\n      addr2: '',\n      city: '',\n      state: '',\n      zip: '',\n      email: '',\n      phone: '+1 ',\n      contactAllowed: true,\n      nameValid: false,\n      addr1Valid: false,\n      addr2Valid: true,\n      cityValid: false,\n      stateValid: false,\n      zipValid: false,\n      emailValid: false,\n      phoneValid: false,\n      formChanged: false,\n      formValid: false\n    };\n    _this.submit = _this.submit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateTabs = _this.updateTabs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.formValid = _this.formValid.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleName = _this.handleName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddr1 = _this.handleAddr1.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddr2 = _this.handleAddr2.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCity = _this.handleCity.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleState = _this.handleState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleZip = _this.handleZip.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleEmail = _this.handleEmail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePhone = _this.handlePhone.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCheck = _this.handleCheck.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validateGeneric = _this.validateGeneric.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validateState = _this.validateState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validateZip = _this.validateZip.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validateEmail = _this.validateEmail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validatePhone = _this.validatePhone.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.stateForInput = _this.stateForInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fullToAbbr = _this.fullToAbbr.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(InformationForm, [{\n    key: \"submit\",\n    value: function submit(event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (!this.state.validated) {\n        this.setState({\n          validated: true\n        });\n      }\n\n      this.updateTabs();\n    }\n  }, {\n    key: \"updateTabs\",\n    value: function updateTabs() {\n      if (this.state.validated) {\n        if (this.state.formChanged) {\n          this.state.formValid ? this.props.enablePayment() : this.props.disablePayment();\n        }\n      }\n    }\n  }, {\n    key: \"formValid\",\n    value: function formValid() {\n      return this.state.nameValid && this.state.addr1Valid && this.state.addr2Valid && this.state.cityValid && this.state.stateValid && this.state.zipValid && this.state.emailValid && this.state.phoneValid;\n    }\n  }, {\n    key: \"handleName\",\n    value: function handleName(name) {\n      if (this.state.name !== name) {\n        this.setState({\n          formChanged: true,\n          name: name.target.value\n        });\n        this.setState({\n          formValid: this.formValid(),\n          nameValid: this.validateGeneric(name.target.value)\n        });\n      }\n\n      this.updateTabs();\n    }\n  }, {\n    key: \"handleAddr1\",\n    value: function handleAddr1(addr1) {\n      if (this.state.addr1 !== addr1) {\n        this.setState({\n          formChanged: true,\n          formValid: this.formValid(),\n          addr1: addr1.target.value,\n          addr1Valid: this.validateGeneric(addr1.target.value)\n        });\n      }\n\n      this.updateTabs();\n    }\n  }, {\n    key: \"handleAddr2\",\n    value: function handleAddr2(addr2) {\n      if (this.state.addr2 !== addr2) {\n        this.setState({\n          formChanged: true,\n          formValid: this.formValid(),\n          addr2: addr2.target.value\n        });\n      }\n\n      this.updateTabs();\n    }\n  }, {\n    key: \"handleCity\",\n    value: function handleCity(city) {\n      if (this.state.city !== city) {\n        if (!/\\d/.test(city.target.value)) {\n          this.setState({\n            formChanged: true,\n            formValid: this.formValid(),\n            city: city.target.value,\n            cityValid: this.validateGeneric(city.target.value)\n          });\n        }\n      }\n\n      this.updateTabs();\n    }\n  }, {\n    key: \"handleState\",\n    value: function handleState(state) {\n      if (this.state.state !== state) {\n        if (!/\\d/.test(state.target.value)) {\n          if (state.target.value.length < 24) {\n            this.setState({\n              formChanged: true,\n              formValid: this.formValid(),\n              state: state.target.value,\n              stateValid: this.validateState(state.target.value)\n            });\n          }\n        }\n      }\n\n      this.updateTabs();\n    }\n  }, {\n    key: \"handleZip\",\n    value: function handleZip(zip) {\n      if (this.state.zip !== zip) {\n        if (zip.target.value.length < 6) {\n          if (!isNaN(zip.target.value)) {\n            this.setState({\n              formChanged: true,\n              formValid: this.formValid(),\n              zip: zip.target.value,\n              zipValid: this.validateZip(zip.target.value)\n            });\n          }\n        }\n      }\n\n      this.updateTabs();\n    }\n  }, {\n    key: \"handleEmail\",\n    value: function handleEmail(email) {\n      if (this.state.email !== email) {\n        this.setState({\n          formChanged: true,\n          formValid: this.formValid(),\n          email: email.target.value,\n          emailValid: this.validateEmail(email.target.value)\n        });\n      }\n\n      this.updateTabs();\n    }\n  }, {\n    key: \"handlePhone\",\n    value: function handlePhone(phone) {\n      if (this.state.phone !== phone) {\n        var value = phone.target.value;\n\n        if (value.length > 2 && value.length < 20) {\n          this.setState({\n            formChanged: true,\n            formValid: this.formValid(),\n            phone: value,\n            phoneValid: this.validatePhone(phone.target.value)\n          });\n        }\n      }\n\n      this.updateTabs();\n    }\n  }, {\n    key: \"handleCheck\",\n    value: function handleCheck(contactAllowed) {\n      if (this.state.contactAllowed !== contactAllowed) {\n        this.setState({\n          contactAllowed: contactAllowed.target.value\n        });\n      }\n    }\n  }, {\n    key: \"validateGeneric\",\n    value: function validateGeneric(generic) {\n      var valid = generic.length > 0 && isNaN(generic);\n      return valid;\n    }\n  }, {\n    key: \"validateState\",\n    value: function validateState(state) {\n      var valid = !(this.stateForInput(state) == null);\n      return valid;\n    }\n  }, {\n    key: \"validateZip\",\n    value: function validateZip(zip) {\n      var valid = zip.length === 5 && !isNaN(zip);\n      return valid;\n    }\n  }, {\n    key: \"validateEmail\",\n    value: function validateEmail(email) {\n      var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      var valid = emailRegex.test(email.toLowerCase());\n      return valid;\n    }\n  }, {\n    key: \"validatePhone\",\n    value: function validatePhone(phone) {\n      var valid = phone.length === 19;\n      return valid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Form, {\n        noValidate: true,\n        validated: this.state.validated,\n        onSubmit: function onSubmit(e) {\n          _this2.submit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Full Name / Organization\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"John Doe\",\n        value: this.state.name,\n        onChange: function onChange(e) {\n          return _this2.handleName(e);\n        },\n        isValid: this.state.validated ? this.state.nameValid : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Please enter a valid name / organization.\"))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"addr1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Address Line 1\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"12345 Artificial Dr\",\n        value: this.state.addr1,\n        onChange: function onChange(e) {\n          return _this2.handleAddr1(e);\n        },\n        isValid: this.state.validated ? this.state.addr1Valid : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Please enter a valid address.\")), \"\\xA0\", React.createElement(Form.Group, {\n        controlId: \"addr2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Address Line 2\"), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Apt. 27\",\n        value: this.state.addr2,\n        onChange: function onChange(e) {\n          return _this2.handleAddr2(e);\n        },\n        isValid: this.state.validated ? this.state.addr2Valid : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"City\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"City\",\n        value: this.state.city,\n        onChange: function onChange(e) {\n          return _this2.handleCity(e);\n        },\n        isValid: this.state.validated ? this.state.cityValid : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Please enter a valid city.\")), \"\\xA0\", React.createElement(Form.Group, {\n        controlId: \"state\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"State\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"State\",\n        value: this.state.state,\n        onChange: function onChange(e) {\n          return _this2.handleState(e);\n        },\n        isValid: this.state.validated ? this.state.stateValid : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Please enter a valid state.\")), \"\\xA0\", React.createElement(Form.Group, {\n        controlId: \"zip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Zip / Postal Code\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"12345\",\n        value: this.state.zip,\n        onChange: function onChange(e) {\n          return _this2.handleZip(e);\n        },\n        isValid: this.state.validated ? this.state.zipValid : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Please enter a valid zip / postal code.\"))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Email Address\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"email\",\n        placeholder: \"example@domain.ext\",\n        value: this.state.email,\n        onChange: function onChange(e) {\n          return _this2.handleEmail(e);\n        },\n        isValid: this.state.validated ? this.state.emailValid : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"Please enter a valid email.\")), \"\\xA0\", React.createElement(Form.Group, {\n        controlId: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"Phone Number\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"+1 (123) 456 - 7890\",\n        value: this.state.phone,\n        onChange: function onChange(e) {\n          return _this2.handlePhone(e);\n        },\n        isValid: this.state.validated ? this.state.phoneValid : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"contactAllowed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(Form.Check, {\n        type: \"checkbox\",\n        label: \"Receive updates from donation recipients throughout the season\",\n        checked: this.state.contactAllowed,\n        onChange: function onChange(e) {\n          return _this2.handleCheck(e);\n        },\n        isValid: this.state.validated ? true : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var nextStateImportant = [nextState.validated, nextState.name, nextState.addr1, nextState.addr2, nextState.city, nextState.state, nextState.zip, nextState.email, nextState.phone, nextState.contactAllowed, nextState.nameValid, nextState.addr1Valid, nextState.addr2Valid, nextState.cityValid, nextState.stateValid, nextState.zipValid, nextState.emailValid, nextState.phoneValid];\n      var thisStateImportant = [this.state.validated, this.state.name, this.state.addr1, this.state.addr2, this.state.city, this.state.state, this.state.zip, this.state.email, this.state.phone, this.state.contactAllowed, this.state.nameValid, this.state.addr1Valid, this.state.addr2Valid, this.state.cityValid, this.state.stateValid, this.state.zipValid, this.state.emailValid, this.state.phoneValid];\n      return nextStateImportant !== thisStateImportant;\n    }\n  }, {\n    key: \"stateForInput\",\n    value: function stateForInput(input) {\n      if (!(input == null)) {\n        var casedInput = input.trim().toUpperCase();\n        var statesFullPos = this.statesFull.indexOf(casedInput);\n\n        if (!(statesFullPos === -1)) {\n          return this.fullToAbbr(this.statesFull[statesFullPos]);\n        }\n\n        var statesAbbrPos = this.statesAbbr.indexOf(casedInput);\n\n        if (!(statesAbbrPos === -1)) {\n          return this.statesAbbr[statesAbbrPos];\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"fullToAbbr\",\n    value: function fullToAbbr(full) {\n      var index = this.statesFull.indexOf(full);\n\n      if (index > -1) {\n        if (index < 50) {\n          return this.statesAbbr[index];\n        }\n\n        if (49 < index && index < 53) {\n          return this.statesAbbr[51];\n        }\n\n        if (52 < index && index < 55) {\n          return this.statesAbbr[50];\n        }\n\n        if (index === 55) {\n          return this.statesAbbr[52];\n        }\n\n        if (55 < index && index < 60) {\n          return this.statesAbbr[53];\n        }\n\n        if (index === 60) {\n          return this.statesAbbr[54];\n        }\n\n        if (60 < index && index < 63) {\n          return this.Abbr[55];\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return InformationForm;\n}(Component);\n\nexport { InformationForm as default };","map":{"version":3,"sources":["/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/src/components/views/Donate/InformationForm.js"],"names":["React","Component","Button","Form","InformationForm","props","statesFull","statesAbbr","state","validated","name","addr1","addr2","city","zip","email","phone","contactAllowed","nameValid","addr1Valid","addr2Valid","cityValid","stateValid","zipValid","emailValid","phoneValid","formChanged","formValid","submit","bind","updateTabs","handleName","handleAddr1","handleAddr2","handleCity","handleState","handleZip","handleEmail","handlePhone","handleCheck","validateGeneric","validateState","validateZip","validateEmail","validatePhone","stateForInput","fullToAbbr","event","preventDefault","stopPropagation","setState","enablePayment","disablePayment","target","value","test","length","isNaN","generic","valid","emailRegex","toLowerCase","e","nextProps","nextState","nextStateImportant","thisStateImportant","input","casedInput","trim","toUpperCase","statesFullPos","indexOf","statesAbbrPos","full","index","Abbr"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport {Button, Form} from 'react-bootstrap';\n\nexport default class InformationForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            validated: false,\n            name: '',\n            addr1: '',\n            addr2: '',\n            city: '',\n            state: '',\n            zip: '',\n            email: '',\n            phone: '+1 ',\n            contactAllowed: true,\n\n            nameValid: false,\n            addr1Valid: false,\n            addr2Valid: true,\n            cityValid: false,\n            stateValid: false,\n            zipValid: false,\n            emailValid: false,\n            phoneValid: false,\n\n            formChanged: false,\n            formValid: false\n        };\n\n        this.submit = this.submit.bind(this);\n        this.updateTabs = this.updateTabs.bind(this);\n        this.formValid = this.formValid.bind(this);\n\n        this.handleName = this.handleName.bind(this);\n        this.handleAddr1 = this.handleAddr1.bind(this);\n        this.handleAddr2 = this.handleAddr2.bind(this);\n        this.handleCity = this.handleCity.bind(this);\n        this.handleState = this.handleState.bind(this);\n        this.handleZip = this.handleZip.bind(this);\n        this.handleEmail = this.handleEmail.bind(this);\n        this.handlePhone = this.handlePhone.bind(this);\n        this.handleCheck = this.handleCheck.bind(this);\n        this.validateGeneric = this.validateGeneric.bind(this);\n        this.validateState = this.validateState.bind(this);\n        this.validateZip = this.validateZip.bind(this);\n        this.validateEmail = this.validateEmail.bind(this);\n        this.validatePhone = this.validatePhone.bind(this);\n\n        this.stateForInput = this.stateForInput.bind(this);\n        this.fullToAbbr = this.fullToAbbr.bind(this);\n    }\n\n    submit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!(this.state.validated)) {\n            this.setState({validated: true});\n        }\n        this.updateTabs();\n    }\n\n    updateTabs() {\n        if (this.state.validated) {\n            if(this.state.formChanged) {\n                this.state.formValid ? this.props.enablePayment() : this.props.disablePayment();\n            }\n        }\n    }\n\n    formValid() {\n        return this.state.nameValid && this.state.addr1Valid && this.state.addr2Valid && this.state.cityValid && this.state.stateValid && this.state.zipValid && this.state.emailValid && this.state.phoneValid;\n    }\n\n    handleName(name) {\n        if (this.state.name !== name) {\n            this.setState({formChanged: true, name: name.target.value});\n            this.setState({formValid: this.formValid(), nameValid: this.validateGeneric(name.target.value)});\n        }\n        this.updateTabs();\n    }\n\n    handleAddr1(addr1) {\n        if (this.state.addr1 !== addr1) {\n            this.setState({formChanged: true, formValid: this.formValid(), addr1: addr1.target.value, addr1Valid: this.validateGeneric(addr1.target.value)});\n        }\n        this.updateTabs();\n    }\n\n    handleAddr2(addr2) {\n        if (this.state.addr2 !== addr2) {\n            this.setState({formChanged: true, formValid: this.formValid(), addr2: addr2.target.value});\n        }\n        this.updateTabs();\n    }\n\n    handleCity(city) {\n        if (this.state.city !== city) {\n            if (!(/\\d/.test(city.target.value))) {\n                this.setState({formChanged: true, formValid: this.formValid(), city: city.target.value, cityValid: this.validateGeneric(city.target.value)});\n            }\n        }\n        this.updateTabs();\n    }\n\n    handleState(state) {\n        if (this.state.state !== state) {\n            if (!(/\\d/.test(state.target.value))) {\n                if (state.target.value.length < 24) {\n                    this.setState({formChanged: true, formValid: this.formValid(), state: state.target.value, stateValid: this.validateState(state.target.value)});\n                }\n            }\n        }\n        this.updateTabs();\n    }\n\n    handleZip(zip) {\n        if (this.state.zip !== zip) {\n            if (zip.target.value.length < 6) {\n                if (!isNaN(zip.target.value)) {\n                    this.setState({formChanged: true, formValid: this.formValid(), zip: zip.target.value, zipValid: this.validateZip(zip.target.value)});\n                }\n            }\n        }\n        this.updateTabs();\n    }\n\n    handleEmail(email) {\n        if (this.state.email !== email) {\n            this.setState({formChanged: true, formValid: this.formValid(), email: email.target.value, emailValid: this.validateEmail(email.target.value)});\n        }\n        this.updateTabs();\n    }\n\n    handlePhone(phone) {\n        if (this.state.phone !== phone) {\n            let value = phone.target.value;\n            if (value.length > 2 && value.length < 20) {\n                this.setState({formChanged: true, formValid: this.formValid(), phone: value, phoneValid: this.validatePhone(phone.target.value)});\n            }\n        }\n        this.updateTabs();\n    }\n\n    handleCheck(contactAllowed) {\n        if (this.state.contactAllowed !== contactAllowed) {\n            this.setState({contactAllowed: contactAllowed.target.value});\n        }\n    }\n\n    validateGeneric(generic) {\n        let valid = generic.length > 0 && isNaN(generic);\n        return valid;\n    }\n\n    validateState(state) {\n        let valid = !(this.stateForInput(state) == null);\n        return valid;\n    }\n\n    validateZip(zip) {\n        let valid = zip.length === 5 && !isNaN(zip);\n        return valid;\n    }\n\n    validateEmail(email) {\n        var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        let valid = emailRegex.test(email.toLowerCase());\n        return valid;\n    }\n\n    validatePhone(phone) {\n        let valid = phone.length === 19;\n        return valid;\n    }\n\n    render() {\n        return (\n            <Form noValidate validated={this.state.validated} onSubmit={e => {this.submit(e);}}>\n                <Form.Row>\n                    <Form.Group controlId=\"name\">\n                        <Form.Label>Full Name / Organization</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"John Doe\"\n                            value={this.state.name}\n                            onChange={e => this.handleName(e)}\n                            isValid={this.state.validated ? this.state.nameValid : null}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please enter a valid name / organization.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group controlId=\"addr1\">\n                        <Form.Label>Address Line 1</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"12345 Artificial Dr\"\n                            value={this.state.addr1}\n                            onChange={e => this.handleAddr1(e)}\n                            isValid={this.state.validated ? this.state.addr1Valid : null}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please enter a valid address.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    &nbsp;\n                    <Form.Group controlId=\"addr2\">\n                        <Form.Label>Address Line 2</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Apt. 27\"\n                            value={this.state.addr2}\n                            onChange={e => this.handleAddr2(e)}\n                            isValid={this.state.validated ? this.state.addr2Valid : null}\n                        />\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group controlId=\"city\">\n                        <Form.Label>City</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"City\"\n                            value={this.state.city}\n                            onChange={e => this.handleCity(e)}\n                            isValid={this.state.validated ? this.state.cityValid : null}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please enter a valid city.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    &nbsp;\n                    <Form.Group controlId=\"state\">\n                        <Form.Label>State</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"State\"\n                            value={this.state.state}\n                            onChange={e => this.handleState(e)}\n                            isValid={this.state.validated ? this.state.stateValid : null}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please enter a valid state.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    &nbsp;\n                    <Form.Group controlId=\"zip\">\n                        <Form.Label>Zip / Postal Code</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"12345\"\n                            value={this.state.zip}\n                            onChange={e => this.handleZip(e)}\n                            isValid={this.state.validated ? this.state.zipValid : null}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please enter a valid zip / postal code.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group controlId=\"email\">\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"email\"\n                            placeholder=\"example@domain.ext\"\n                            value={this.state.email}\n                            onChange={e => this.handleEmail(e)}\n                            isValid={this.state.validated ? this.state.emailValid : null}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please enter a valid email.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                    &nbsp;\n                    <Form.Group controlId=\"phone\">\n                        <Form.Label>Phone Number</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"+1 (123) 456 - 7890\"\n                            value={this.state.phone}\n                            onChange={e => this.handlePhone(e)}\n                            isValid={this.state.validated ? this.state.phoneValid : null}\n                        />\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group controlId=\"contactAllowed\">\n                        <Form.Check\n                            type=\"checkbox\"\n                            label=\"Receive updates from donation recipients throughout the season\"\n                            checked={this.state.contactAllowed}\n                            onChange={e => this.handleCheck(e)}\n                            isValid={this.state.validated ? true : null}\n                        />\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Button type=\"submit\">Submit</Button>\n                </Form.Row>\n            </Form>\n        );\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        let nextStateImportant = [nextState.validated, nextState.name, nextState.addr1, nextState.addr2, nextState.city, nextState.state, nextState.zip, nextState.email, nextState.phone, nextState.contactAllowed,\n            nextState.nameValid, nextState.addr1Valid, nextState.addr2Valid, nextState.cityValid, nextState.stateValid, nextState.zipValid, nextState.emailValid, nextState.phoneValid\n            ];\n        let thisStateImportant = [this.state.validated, this.state.name, this.state.addr1, this.state.addr2, this.state.city, this.state.state, this.state.zip, this.state.email, this.state.phone, this.state.contactAllowed,\n            this.state.nameValid, this.state.addr1Valid, this.state.addr2Valid, this.state.cityValid, this.state.stateValid, this.state.zipValid, this.state.emailValid, this.state.phoneValid\n            ];\n        return nextStateImportant !== thisStateImportant;\n    }\n\n    stateForInput(input) {\n        if (!(input == null)) {\n            let casedInput = input.trim().toUpperCase();\n            let statesFullPos = this.statesFull.indexOf(casedInput);\n            if (!(statesFullPos === -1)) {\n                return this.fullToAbbr(this.statesFull[statesFullPos]);\n            }\n\n            let statesAbbrPos = this.statesAbbr.indexOf(casedInput);\n            if (!(statesAbbrPos === -1)) {\n                return this.statesAbbr[statesAbbrPos];\n            }   \n        }\n        return null;\n    }\n\n    fullToAbbr(full) {\n        let index = this.statesFull.indexOf(full);\n        if (index > -1) {\n            if (index < 50) {\n                return this.statesAbbr[index];\n            }\n            if (49 < index && index < 53) {\n                return this.statesAbbr[51];\n            }\n            if (52 < index && index < 55) {\n                return this.statesAbbr[50];\n            }\n            if (index === 55) {\n                return this.statesAbbr[52];\n            }\n            if (55 < index && index < 60) {\n                return this.statesAbbr[53];\n            }\n            if (index === 60) {\n                return this.statesAbbr[54];\n            }\n            if (60 < index && index < 63) {\n                return this.Abbr[55];\n            }\n        }\n        return null;\n    }\n\n    statesFull = [\n        \"ALABAMA\", \"ALASKA\", \"ARIZONA\", \"ARKANSAS\",\n        \"CALIFORNIA\", \"COLORADO\", \"CONNECTICUT\", \"DELAWARE\",\n        \"FLORIDA\", \"GEORGIA\", \"HAWAII\", \"IDAHO\",\n        \"ILLINOIS\", \"INDIANA\", \"IOWA\", \"KANSAS\",\n        \"KENTUCKY\", \"LOUISIANA\", \"MAINE\", \"MARYLAND\",\n        \"MASSACHUSETTS\", \"MICHIGAN\", \"MINNESOTA\", \"MISSISSIPPI\",\n        \"MISSOURI\", \"MONTANA\", \"NEBRASKA\", \"NEVADA\",\n        \"NEW HAMPSHIRE\", \"NEW JERSEY\", \"NEW MEXICO\", \"NEW YORK\",\n        \"NORTH CAROLINA\", \"NORTH DAKOTA\", \"OHIO\", \"OKLAHOMA\",\n        \"OREGON\", \"PENNSYLVANIA\", \"RHODE ISLAND\", \"SOUTH CAROLINA\",\n        \"SOUTH DAKOTA\", \"TENNESSEE\", \"TEXAS\", \"UTAH\",\n        \"VERMONT\", \"VIRGINIA\", \"WASHINGTON\", \"WEST VIRGINIA\",\n        \"WISCONSIN\", \"WYOMING\", \"WASHINGTON DC\", \"WASHINGTON D.C.\",\n        \"DISTRICT OF COLUMBIA\",\n        \"AMERICAN SAMOA\", \"SAMOA\", \"GUAM\", \"NORTHERN MARIANA ISLANDS\",\n        \"NORTHERN MARIANA\", \"MARIANA ISLANDS\", \"MARIANA\", \"PUERTO RICO\",\n        \"VIRGIN ISLANDS\", \"VIRGIN\"\n    ];\n\n    statesAbbr = [\n        \"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\",\n        \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\",\n        \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\",\n        \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\",\n        \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\",\n        \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\",\n        \"WI\", \"WY\",\n        \"AS\", \"DC\", \"GU\", \"MP\", \"PR\", \"VI\"\n    ];\n}"]},"metadata":{},"sourceType":"module"}