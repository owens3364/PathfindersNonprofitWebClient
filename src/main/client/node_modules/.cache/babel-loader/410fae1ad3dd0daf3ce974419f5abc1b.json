{"ast":null,"code":"import _classCallCheck from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/src/components/views/Donate/PaymentForm.js\";\nimport React, { Component } from 'react';\nimport { Form, DropdownButton, Dropdown, ButtonGroup } from 'react-bootstrap';\nimport { CardElement, IbanElement, PaymentRequestButtonElement, injectStripe } from 'react-stripe-elements';\nvar teamInvalidError = \"Please enter a valid team.\";\nvar amountInvalidError = \"Please enter a valid amount.\";\nvar paymentTypeInvalidError = \"Please enter a valid payment type.\";\n\nvar PaymentForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PaymentForm, _Component);\n\n  _createClass(PaymentForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// TODO: Log ReactGA stuff here\n    }\n  }]);\n\n  function PaymentForm(props) {\n    var _this;\n\n    _classCallCheck(this, PaymentForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PaymentForm).call(this, props));\n    _this.paymentRequestObj = null;\n    _this.state = {\n      validated: false,\n      paymentType: \"Payment type\",\n      paymentValid: false,\n      amount: \"0\",\n      amountValid: false,\n      team: \"Select team\",\n      teamValid: false,\n      formChanged: false,\n      formValid: false,\n      error: \"\"\n    };\n    _this.submit = _this.submit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateTabs = _this.updateTabs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.formValid = _this.formValid.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAmount = _this.formValid.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validateAmount = _this.validateAmount.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.errorFromInputs = _this.errorFromInputs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updatePaymentRequestObj = _this.updatePaymentRequestObj.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.genPaymentRequestButton = _this.genPaymentRequestButton.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.props.setPaymentFormPublicDataChangedCallback(function () {\n      return _this.updatePaymentRequestObj();\n    });\n\n    return _this;\n  }\n\n  _createClass(PaymentForm, [{\n    key: \"submit\",\n    value: function submit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (!this.state.validated) {\n        this.setState({\n          validated: true\n        }, function () {\n          return _this2.updateTabs();\n        });\n      } else {\n        this.updateTabs();\n      }\n    }\n  }, {\n    key: \"updateTabs\",\n    value: function updateTabs() {\n      var _this3 = this;\n\n      this.setState({\n        formValid: this.formValid()\n      }, function () {\n        if (_this3.state.validated) {\n          if (_this3.state.formChanged) {\n            _this3.state.formValid ? _this3.props.enableConfirmation() : _this3.props.disableConfirmation();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"formValid\",\n    value: function formValid() {\n      return this.state.paymentValid && this.state.amountValid && this.state.teamValid;\n    }\n  }, {\n    key: \"handleAmount\",\n    value: function handleAmount(amount) {\n      var _this4 = this;\n\n      if (this.state.amount !== amount.target.value) {\n        if (!isNaN(amount.target.value)) {\n          var amountValid = this.validateAmount(amount.target.value);\n          this.setState({\n            formChanged: true,\n            amount: amount.target.value,\n            amountValid: amountValid\n          }, function () {\n            _this4.setState({\n              error: _this4.errorFromInputs()\n            });\n\n            _this4.updateTabs();\n          });\n        }\n      }\n    }\n  }, {\n    key: \"validateAmount\",\n    value: function validateAmount(amount) {\n      var amountRegex = /^\\$?[0-9]+(\\.[0-9][0-9])?$/;\n      return amountRegex.test(amount.trim());\n    }\n  }, {\n    key: \"errorFromInputs\",\n    value: function errorFromInputs() {\n      if (!this.state.paymentValid) {\n        return paymentTypeInvalidError;\n      }\n\n      if (!this.state.teamValid) {\n        return teamInvalidError;\n      }\n\n      if (!this.state.amountValid) {\n        return amountInvalidError;\n      }\n    }\n  }, {\n    key: \"updatePaymentRequestObj\",\n    value: function updatePaymentRequestObj() {\n      if (this.paymentRequestObj === null) {\n        this.paymentRequestObj = this.props.stripe.paymentRequest({\n          country: \"US\",\n          currency: \"usd\",\n          total: {\n            amount: parseFloat(this.state.amount) * 100,\n            label: \"Gracious donation / sponsorship of team \" + this.state.team\n          },\n          displayItems: [{\n            amount: parseFloat(this.state.amount) * 100,\n            label: \"Gracious donation / sponsorship of team \" + this.state.team\n          }],\n          requestPayerName: false,\n          requestPayerEmail: false,\n          requestPayerPhone: true,\n          requestShipping: false\n        });\n      } else {\n        this.paymentRequestObj.update({\n          country: \"US\",\n          currency: \"usd\",\n          total: {\n            amount: parseFloat(this.state.amount) * 100,\n            label: \"Gracious donation / sponsorship of team \" + this.state.team\n          },\n          displayItems: [{\n            amount: parseFloat(this.state.amount) * 100,\n            label: \"Gracious donation / sponsorship of team \" + this.state.team\n          }],\n          requestPayerName: false,\n          requestPayerEmail: false,\n          requestPayerPhone: true,\n          requestShipping: false\n        });\n      }\n    }\n  }, {\n    key: \"genPaymentRequestButton\",\n    value: function genPaymentRequestButton() {\n      this.paymentRequestObj.canMakePayment().then(function (value) {\n        return console.log(value);\n      });\n      return null;\n      return React.createElement(PaymentRequestButtonElement, {\n        paymentRequest: this.paymentRequestObj,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        className: \"mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"paymentType\",\n        title: this.state.paymentType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onSelect: function onSelect() {\n          return _this5.setState({\n            paymentType: \"Credit / Debit\",\n            paymentValid: true\n          }, function () {\n            return _this5.setState({\n              error: _this5.errorFromInputs()\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Credit / Debit\"), React.createElement(Dropdown.Item, {\n        onSelect: function onSelect() {\n          return _this5.setState({\n            paymentType: \"IBAN\",\n            paymentValid: true\n          }, function () {\n            return _this5.setState({\n              error: _this5.errorFromInputs()\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"IBAN\"), React.createElement(Dropdown.Item, {\n        onSelect: function onSelect() {\n          _this5.updatePaymentRequestObj();\n\n          _this5.setState({\n            paymentType: \"Apple / Google Pay\",\n            paymentValid: true\n          }, function () {\n            return _this5.setState({\n              error: _this5.errorFromInputs()\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Apple / Google Pay\")), \"\\xA0\", React.createElement(DropdownButton, {\n        id: \"team\",\n        title: this.state.team,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onSelect: function onSelect() {\n          return _this5.setState({\n            team: \"FTC Pathfinders 13497\",\n            teamValid: true\n          }, function () {\n            return _this5.setState({\n              error: _this5.errorFromInputs()\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"FTC Pathfinders 13497\"), React.createElement(Dropdown.Item, {\n        onSelect: function onSelect() {\n          return _this5.setState({\n            team: \"FLL Pathfinders 7885\",\n            teamValid: true\n          }, function () {\n            return _this5.setState({\n              error: _this5.errorFromInputs()\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"FLL Pathfinders 7885\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(Form, {\n        noValidate: true,\n        validated: this.state.validated,\n        onSubmit: function onSubmit(e) {\n          return _this5.submit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Amount (USD)\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"12.34\",\n        value: this.state.amonut,\n        onChange: function onChange(e) {\n          return _this5.handleAmount(e);\n        },\n        isValid: this.state.validated ? this.state.amountValid && this.state.paymentValid && this.state.teamValid : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, this.state.error)))), this.state.paymentType === \"Credit / Debit\" ? React.createElement(CardElement, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }) : this.state.paymentType === \"IBAN\" ? React.createElement(IbanElement, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }) : this.state.paymentType === \"Apple / Google Pay\" ? this.genPaymentRequestButton() : null);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var nextStateImportant = [nextState.validated, nextState.amount, nextState.paymentType, nextState.amountValid, nextState.paymentValid, nextState.team, nextState.teamValid, nextState.error];\n      var thisStateImportant = [this.state.validated, this.state.amount, this.state.amountValid, this.state.paymentType, this.state.paymentValid, this.state.team, this.state.teamValid, this.state.error];\n      return nextStateImportant !== thisStateImportant;\n    }\n  }]);\n\n  return PaymentForm;\n}(Component);\n\nexport default injectStripe(PaymentForm);","map":{"version":3,"sources":["/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/src/components/views/Donate/PaymentForm.js"],"names":["React","Component","Form","DropdownButton","Dropdown","ButtonGroup","CardElement","IbanElement","PaymentRequestButtonElement","injectStripe","teamInvalidError","amountInvalidError","paymentTypeInvalidError","PaymentForm","props","paymentRequestObj","state","validated","paymentType","paymentValid","amount","amountValid","team","teamValid","formChanged","formValid","error","submit","bind","updateTabs","handleAmount","validateAmount","errorFromInputs","updatePaymentRequestObj","genPaymentRequestButton","setPaymentFormPublicDataChangedCallback","event","preventDefault","stopPropagation","setState","enableConfirmation","disableConfirmation","target","value","isNaN","amountRegex","test","trim","stripe","paymentRequest","country","currency","total","parseFloat","label","displayItems","requestPayerName","requestPayerEmail","requestPayerPhone","requestShipping","update","canMakePayment","then","console","log","e","amonut","nextProps","nextState","nextStateImportant","thisStateImportant"],"mappings":"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","sourcesContent":["// @flow\n\nimport React, {Component} from 'react';\nimport {Form, DropdownButton, Dropdown, ButtonGroup} from 'react-bootstrap';\nimport {CardElement, IbanElement, PaymentRequestButtonElement, injectStripe} from 'react-stripe-elements';\n\nconst teamInvalidError = \"Please enter a valid team.\";\nconst amountInvalidError = \"Please enter a valid amount.\";\nconst paymentTypeInvalidError = \"Please enter a valid payment type.\";\n\nclass PaymentForm extends Component {\n\n    paymentRequestObj = null;\n\n    componentDidMount() {\n        // TODO: Log ReactGA stuff here\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            validated: false,\n            paymentType: \"Payment type\",\n            paymentValid: false,\n            amount: \"0\",\n            amountValid: false,\n            team: \"Select team\",\n            teamValid: false,\n            formChanged: false,\n            formValid: false,\n            error: \"\"\n        };\n\n        this.submit = this.submit.bind(this);\n        this.updateTabs = this.updateTabs.bind(this);\n        this.formValid = this.formValid.bind(this);\n        this.handleAmount = this.formValid.bind(this);\n        this.validateAmount = this.validateAmount.bind(this);\n        this.errorFromInputs = this.errorFromInputs.bind(this);\n        this.updatePaymentRequestObj = this.updatePaymentRequestObj.bind(this);\n        this.genPaymentRequestButton = this.genPaymentRequestButton.bind(this);\n\n        this.props.setPaymentFormPublicDataChangedCallback(() => this.updatePaymentRequestObj());\n    }\n\n    submit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!this.state.validated) {\n            this.setState({ validated: true }, () => this.updateTabs());\n        } else {\n            this.updateTabs();\n        }\n    }\n\n    updateTabs() {\n        this.setState({ formValid: this.formValid() }, () => {\n            if (this.state.validated) {\n                if (this.state.formChanged) {\n                    this.state.formValid ? this.props.enableConfirmation() : this.props.disableConfirmation();\n                }\n            }\n        });\n    }\n\n    formValid() {\n        return this.state.paymentValid && this.state.amountValid && this.state.teamValid;\n    }\n\n    handleAmount(amount) {\n        if (this.state.amount !== amount.target.value) {\n            if (!isNaN(amount.target.value)) {\n                let amountValid = this.validateAmount(amount.target.value);\n                this.setState(\n                    {\n                        formChanged: true,\n                        amount: amount.target.value,\n                        amountValid: amountValid,\n                    },\n                    () => {\n                        this.setState({error: this.errorFromInputs()})\n                        this.updateTabs();\n                    }\n                );\n            }\n        }\n    }\n\n    validateAmount(amount) {\n        const amountRegex = /^\\$?[0-9]+(\\.[0-9][0-9])?$/;\n        return amountRegex.test(amount.trim());\n    }\n\n    errorFromInputs() {\n        if (!this.state.paymentValid) {\n            return paymentTypeInvalidError;\n        }\n        if (!this.state.teamValid) {\n            return teamInvalidError;\n        }\n        if (!this.state.amountValid) {\n            return amountInvalidError;\n        }\n    }\n\n    updatePaymentRequestObj() {\n        if (this.paymentRequestObj === null) {\n            this.paymentRequestObj = this.props.stripe.paymentRequest({\n                country: \"US\",\n                currency: \"usd\",\n                total: {\n                    amount: parseFloat(this.state.amount) * 100,\n                    label: \"Gracious donation / sponsorship of team \" + this.state.team\n                },\n                displayItems: [\n                    {\n                        amount: parseFloat(this.state.amount) * 100,\n                        label: \"Gracious donation / sponsorship of team \" + this.state.team\n                    }\n                ],\n                requestPayerName: false,\n                requestPayerEmail: false,\n                requestPayerPhone: true,\n                requestShipping: false\n            });\n        } else {\n            this.paymentRequestObj.update({\n                country: \"US\",\n                currency: \"usd\",\n                total: {\n                    amount: parseFloat(this.state.amount) * 100,\n                    label: \"Gracious donation / sponsorship of team \" + this.state.team\n                },\n                displayItems: [\n                    {\n                        amount: parseFloat(this.state.amount) * 100,\n                        label: \"Gracious donation / sponsorship of team \" + this.state.team\n                    }\n                ],\n                requestPayerName: false,\n                requestPayerEmail: false,\n                requestPayerPhone: true,\n                requestShipping: false\n            });\n        }\n    }\n\n    genPaymentRequestButton() {\n        this.paymentRequestObj.canMakePayment().then((value) => console.log(value));\n        return null;\n        return (\n            <PaymentRequestButtonElement paymentRequest={this.paymentRequestObj}/>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <ButtonGroup className=\"mr-2\">\n                    <DropdownButton id=\"paymentType\" title={this.state.paymentType}>\n                        <Dropdown.Item onSelect={() => this.setState(\n                            {   \n                                paymentType: \"Credit / Debit\",\n                                paymentValid: true\n                            },\n                            () => this.setState({error: this.errorFromInputs()})\n                            )}>Credit / Debit</Dropdown.Item>\n                        <Dropdown.Item onSelect={() => this.setState(\n                            {\n                                paymentType: \"IBAN\",\n                                paymentValid: true\n                            },\n                            () => this.setState({error: this.errorFromInputs()})\n                            )}>IBAN</Dropdown.Item>\n                        <Dropdown.Item onSelect={() => {\n                            this.updatePaymentRequestObj();\n                            this.setState(\n                                {\n                                    paymentType: \"Apple / Google Pay\",\n                                    paymentValid: true\n                                },\n                                () => this.setState({error: this.errorFromInputs()}));\n                            }}>Apple / Google Pay</Dropdown.Item>\n                    </DropdownButton>\n                    &nbsp;\n                    <DropdownButton id=\"team\" title={this.state.team}>\n                        <Dropdown.Item onSelect={() => this.setState(\n                            {\n                                team: \"FTC Pathfinders 13497\",\n                                teamValid: true\n                            },\n                            () => this.setState({error: this.errorFromInputs()})\n                        )}>FTC Pathfinders 13497</Dropdown.Item>\n                        <Dropdown.Item onSelect={() => this.setState(\n                            {\n                                team: \"FLL Pathfinders 7885\",\n                                teamValid: true\n                            },\n                            () => this.setState({error: this.errorFromInputs()})\n                        )}>FLL Pathfinders 7885</Dropdown.Item>\n                    </DropdownButton>\n                </ButtonGroup>\n                <br/>\n                <Form\n                    noValidate\n                    validated={this.state.validated}\n                    onSubmit={e => this.submit(e)}\n                >\n                    <Form.Row>\n                        <Form.Group controlId=\"amount\">\n                            <Form.Label>Amount (USD)</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"12.34\"\n                                value={this.state.amonut}\n                                onChange={e => this.handleAmount(e)}\n                                isValid={this.state.validated ? (this.state.amountValid && this.state.paymentValid && this.state.teamValid) : null}\n                            />\n                            <Form.Control.Feedback type=\"invalid\">\n                                {this.state.error}\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                </Form>\n                {\n                    this.state.paymentType === \"Credit / Debit\" ? (<CardElement/>) :\n                    this.state.paymentType === \"IBAN\" ? (<IbanElement/>) :\n                    this.state.paymentType === \"Apple / Google Pay\" ? this.genPaymentRequestButton() : null\n                }\n            </div>\n        );\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        let nextStateImportant = [\n            nextState.validated,\n            nextState.amount,\n            nextState.paymentType,\n            nextState.amountValid,\n            nextState.paymentValid,\n            nextState.team,\n            nextState.teamValid,\n            nextState.error\n        ];\n        let thisStateImportant = [\n            this.state.validated,\n            this.state.amount,\n            this.state.amountValid,\n            this.state.paymentType,\n            this.state.paymentValid,\n            this.state.team,\n            this.state.teamValid,\n            this.state.error\n        ];\n        return nextStateImportant !== thisStateImportant;\n    }\n}\n\nexport default injectStripe(PaymentForm);"]},"metadata":{},"sourceType":"module"}