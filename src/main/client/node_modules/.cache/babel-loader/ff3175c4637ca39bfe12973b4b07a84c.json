{"ast":null,"code":"import _classCallCheck from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/src/components/views/Donate/InformationForm.js\";\nimport React, { Component } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport ReactGA from 'react-ga';\n\nvar InformationForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InformationForm, _Component);\n\n  _createClass(InformationForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// TODO: Log ReactGA stuff here\n    }\n  }]);\n\n  function InformationForm(props) {\n    var _this;\n\n    _classCallCheck(this, InformationForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InformationForm).call(this, props));\n    _this.statesFull = ['ALABAMA', 'ALASKA', 'ARIZONA', 'ARKANSAS', 'CALIFORNIA', 'COLORADO', 'CONNECTICUT', 'DELAWARE', 'FLORIDA', 'GEORGIA', 'HAWAII', 'IDAHO', 'ILLINOIS', 'INDIANA', 'IOWA', 'KANSAS', 'KENTUCKY', 'LOUISIANA', 'MAINE', 'MARYLAND', 'MASSACHUSETTS', 'MICHIGAN', 'MINNESOTA', 'MISSISSIPPI', 'MISSOURI', 'MONTANA', 'NEBRASKA', 'NEVADA', 'NEW HAMPSHIRE', 'NEW JERSEY', 'NEW MEXICO', 'NEW YORK', 'NORTH CAROLINA', 'NORTH DAKOTA', 'OHIO', 'OKLAHOMA', 'OREGON', 'PENNSYLVANIA', 'RHODE ISLAND', 'SOUTH CAROLINA', 'SOUTH DAKOTA', 'TENNESSEE', 'TEXAS', 'UTAH', 'VERMONT', 'VIRGINIA', 'WASHINGTON', 'WEST VIRGINIA', 'WISCONSIN', 'WYOMING', 'WASHINGTON DC', 'WASHINGTON D.C.', 'DISTRICT OF COLUMBIA', 'AMERICAN SAMOA', 'SAMOA', 'GUAM', 'NORTHERN MARIANA ISLANDS', 'NORTHERN MARIANA', 'MARIANA ISLANDS', 'MARIANA', 'PUERTO RICO', 'VIRGIN ISLANDS', 'VIRGIN'];\n    _this.statesAbbr = ['AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'FL', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY', 'AS', 'DC', 'GU', 'MP', 'PR', 'VI'];\n    _this.state = {\n      validated: false,\n      name: '',\n      addr1: '',\n      addr2: '',\n      city: '',\n      state: '',\n      zip: '',\n      email: '',\n      phone: '+1 ',\n      contactAllowed: true,\n      nameValid: false,\n      addr1Valid: false,\n      addr2Valid: true,\n      cityValid: false,\n      stateValid: false,\n      zipValid: false,\n      emailValid: false,\n      phoneValid: false,\n      formChanged: false,\n      formValid: false\n    };\n    _this.submit = _this.submit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateTabs = _this.updateTabs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.formValid = _this.formValid.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleName = _this.handleName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddr1 = _this.handleAddr1.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddr2 = _this.handleAddr2.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCity = _this.handleCity.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleState = _this.handleState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleZip = _this.handleZip.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleEmail = _this.handleEmail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePhone = _this.handlePhone.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCheck = _this.handleCheck.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validateGeneric = _this.validateGeneric.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validateState = _this.validateState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validateZip = _this.validateZip.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validateEmail = _this.validateEmail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validatePhone = _this.validatePhone.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.stateForInput = _this.stateForInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fullToAbbr = _this.fullToAbbr.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(InformationForm, [{\n    key: \"submit\",\n    value: function submit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (!this.state.validated) {\n        this.setState({\n          validated: true\n        }, function () {\n          return _this2.updateTabs();\n        });\n      } else {\n        this.updateTabs();\n      }\n    }\n  }, {\n    key: \"updateTabs\",\n    value: function updateTabs() {\n      var _this3 = this;\n\n      this.setState({\n        formValid: this.formValid()\n      }, function () {\n        if (_this3.state.validated) {\n          if (_this3.state.formChanged) {\n            if (_this3.state.formValid) {\n              _this3.props.enablePayment();\n            } else {\n              _this3.props.disablePayment();\n\n              _this3.props.disableConfirmation();\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"formValid\",\n    value: function formValid() {\n      return this.state.nameValid && this.state.addr1Valid && this.state.addr2Valid && this.state.cityValid && this.state.stateValid && this.state.zipValid && this.state.emailValid && this.state.phoneValid;\n    }\n  }, {\n    key: \"handleName\",\n    value: function handleName(name) {\n      var _this4 = this;\n\n      if (this.state.name !== name) {\n        this.setState({\n          formChanged: true,\n          name: name.target.value,\n          nameValid: this.validateGeneric(name.target.value)\n        }, function () {\n          return _this4.updateTabs();\n        });\n      }\n    }\n  }, {\n    key: \"handleAddr1\",\n    value: function handleAddr1(addr1) {\n      var _this5 = this;\n\n      if (this.state.addr1 !== addr1) {\n        this.setState({\n          formChanged: true,\n          addr1: addr1.target.value,\n          addr1Valid: this.validateGeneric(addr1.target.value)\n        }, function () {\n          return _this5.updateTabs();\n        });\n      }\n    }\n  }, {\n    key: \"handleAddr2\",\n    value: function handleAddr2(addr2) {\n      var _this6 = this;\n\n      if (this.state.addr2 !== addr2) {\n        this.setState({\n          formChanged: true,\n          addr2: addr2.target.value,\n          addr2Valid: this.validateGeneric(addr2.target.value)\n        }, function () {\n          return _this6.updateTabs();\n        });\n      }\n    }\n  }, {\n    key: \"handleCity\",\n    value: function handleCity(city) {\n      var _this7 = this;\n\n      if (this.state.city !== city) {\n        if (!/\\d/.test(city.target.value)) {\n          this.setState({\n            formChanged: true,\n            city: city.target.value,\n            cityValid: this.validateGeneric(city.target.value)\n          }, function () {\n            return _this7.updateTabs();\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleState\",\n    value: function handleState(state) {\n      var _this8 = this;\n\n      if (this.state.state !== state) {\n        if (!/\\d/.test(state.target.value)) {\n          if (state.target.value.length < 24) {\n            this.setState({\n              formChanged: true,\n              state: state.target.value,\n              stateValid: this.validateState(state.target.value)\n            }, function () {\n              return _this8.updateTabs();\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"handleZip\",\n    value: function handleZip(zip) {\n      var _this9 = this;\n\n      if (this.state.zip !== zip) {\n        if (zip.target.value.length < 6) {\n          if (!isNaN(zip.target.value)) {\n            this.setState({\n              formChanged: true,\n              zip: zip.target.value,\n              zipValid: this.validateZip(zip.target.value)\n            }, function () {\n              return _this9.updateTabs();\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"handleEmail\",\n    value: function handleEmail(email) {\n      var _this10 = this;\n\n      if (this.state.email !== email) {\n        this.setState({\n          formChanged: true,\n          email: email.target.value,\n          emailValid: this.validateEmail(email.target.value)\n        }, function () {\n          return _this10.updateTabs();\n        });\n      }\n    }\n  }, {\n    key: \"handlePhone\",\n    value: function handlePhone(phone) {\n      var _this11 = this;\n\n      if (this.state.phone !== phone) {\n        var value = phone.target.value;\n\n        if (value.length > 2 && value.length < 20) {\n          this.setState({\n            formChanged: true,\n            phone: value,\n            phoneValid: this.validatePhone(phone.target.value)\n          }, function () {\n            return _this11.updateTabs();\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleCheck\",\n    value: function handleCheck(contactAllowed) {\n      if (this.state.contactAllowed !== contactAllowed) {\n        this.setState({\n          contactAllowed: contactAllowed.target.value\n        });\n      }\n    }\n  }, {\n    key: \"validateGeneric\",\n    value: function validateGeneric(generic) {\n      var valid = generic.length > 0 && isNaN(generic);\n      return valid;\n    }\n  }, {\n    key: \"validateState\",\n    value: function validateState(state) {\n      var valid = !(this.stateForInput(state) == null);\n      return valid;\n    }\n  }, {\n    key: \"validateZip\",\n    value: function validateZip(zip) {\n      var valid = zip.length === 5 && !isNaN(zip);\n      return valid;\n    }\n  }, {\n    key: \"validateEmail\",\n    value: function validateEmail(email) {\n      var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      var valid = emailRegex.test(email.toLowerCase());\n      return valid;\n    }\n  }, {\n    key: \"validatePhone\",\n    value: function validatePhone(phone) {\n      return true;\n      var valid = phone.length === 19;\n      return valid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this12 = this;\n\n      return React.createElement(Form, {\n        noValidate: true,\n        validated: this.state.validated,\n        onSubmit: function onSubmit(e) {\n          _this12.submit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Full Name / Organization\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"John Doe\",\n        value: this.state.name,\n        onChange: function onChange(e) {\n          return _this12.handleName(e);\n        },\n        isValid: this.state.validated ? this.state.nameValid : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Please enter a valid name / organization.\"))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"addr1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Address Line 1\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"12345 Artificial Dr\",\n        value: this.state.addr1,\n        onChange: function onChange(e) {\n          return _this12.handleAddr1(e);\n        },\n        isValid: this.state.validated ? this.state.addr1Valid : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Please enter a valid address.\")), \"\\xA0\", React.createElement(Form.Group, {\n        controlId: \"addr2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Address Line 2\"), React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Apt. 27\",\n        value: this.state.addr2,\n        onChange: function onChange(e) {\n          return _this12.handleAddr2(e);\n        },\n        isValid: this.state.validated ? this.state.addr2Valid : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"City\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"City\",\n        value: this.state.city,\n        onChange: function onChange(e) {\n          return _this12.handleCity(e);\n        },\n        isValid: this.state.validated ? this.state.cityValid : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Please enter a valid city.\")), \"\\xA0\", React.createElement(Form.Group, {\n        controlId: \"state\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"State\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"State\",\n        value: this.state.state,\n        onChange: function onChange(e) {\n          return _this12.handleState(e);\n        },\n        isValid: this.state.validated ? this.state.stateValid : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"Please enter a valid state.\")), \"\\xA0\", React.createElement(Form.Group, {\n        controlId: \"zip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"Zip / Postal Code\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"12345\",\n        value: this.state.zip,\n        onChange: function onChange(e) {\n          return _this12.handleZip(e);\n        },\n        isValid: this.state.validated ? this.state.zipValid : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"Please enter a valid zip / postal code.\"))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, \"Email Address\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"email\",\n        placeholder: \"example@domain.ext\",\n        value: this.state.email,\n        onChange: function onChange(e) {\n          return _this12.handleEmail(e);\n        },\n        isValid: this.state.validated ? this.state.emailValid : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, \"Please enter a valid email.\")), \"\\xA0\", React.createElement(Form.Group, {\n        controlId: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"Phone Number\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"+1 (123) 456 - 7890\",\n        value: this.state.phone,\n        onChange: function onChange(e) {\n          return _this12.handlePhone(e);\n        },\n        isValid: this.state.validated ? this.state.phoneValid : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"contactAllowed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(Form.Check, {\n        type: \"checkbox\",\n        label: \"Receive updates from donation recipients throughout the season\",\n        checked: this.state.contactAllowed,\n        onChange: function onChange(e) {\n          return _this12.handleCheck(e);\n        },\n        isValid: this.state.validated ? true : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var nextStateImportant = [nextState.validated, nextState.name, nextState.addr1, nextState.addr2, nextState.city, nextState.state, nextState.zip, nextState.email, nextState.phone, nextState.contactAllowed, nextState.nameValid, nextState.addr1Valid, nextState.addr2Valid, nextState.cityValid, nextState.stateValid, nextState.zipValid, nextState.emailValid, nextState.phoneValid];\n      var thisStateImportant = [this.state.validated, this.state.name, this.state.addr1, this.state.addr2, this.state.city, this.state.state, this.state.zip, this.state.email, this.state.phone, this.state.contactAllowed, this.state.nameValid, this.state.addr1Valid, this.state.addr2Valid, this.state.cityValid, this.state.stateValid, this.state.zipValid, this.state.emailValid, this.state.phoneValid];\n      return nextStateImportant !== thisStateImportant;\n    }\n  }, {\n    key: \"stateForInput\",\n    value: function stateForInput(input) {\n      if (!(input == null)) {\n        var casedInput = input.trim().toUpperCase();\n        var statesFullPos = this.statesFull.indexOf(casedInput);\n\n        if (!(statesFullPos === -1)) {\n          return this.fullToAbbr(this.statesFull[statesFullPos]);\n        }\n\n        var statesAbbrPos = this.statesAbbr.indexOf(casedInput);\n\n        if (!(statesAbbrPos === -1)) {\n          return this.statesAbbr[statesAbbrPos];\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"fullToAbbr\",\n    value: function fullToAbbr(full) {\n      var index = this.statesFull.indexOf(full);\n\n      if (index > -1) {\n        if (index < 50) {\n          return this.statesAbbr[index];\n        }\n\n        if (49 < index && index < 53) {\n          return this.statesAbbr[51];\n        }\n\n        if (52 < index && index < 55) {\n          return this.statesAbbr[50];\n        }\n\n        if (index === 55) {\n          return this.statesAbbr[52];\n        }\n\n        if (55 < index && index < 60) {\n          return this.statesAbbr[53];\n        }\n\n        if (index === 60) {\n          return this.statesAbbr[54];\n        }\n\n        if (60 < index && index < 63) {\n          return this.Abbr[55];\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return InformationForm;\n}(Component);\n\nexport { InformationForm as default };","map":{"version":3,"sources":["/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/src/components/views/Donate/InformationForm.js"],"names":["React","Component","Button","Form","ReactGA","InformationForm","props","statesFull","statesAbbr","state","validated","name","addr1","addr2","city","zip","email","phone","contactAllowed","nameValid","addr1Valid","addr2Valid","cityValid","stateValid","zipValid","emailValid","phoneValid","formChanged","formValid","submit","bind","updateTabs","handleName","handleAddr1","handleAddr2","handleCity","handleState","handleZip","handleEmail","handlePhone","handleCheck","validateGeneric","validateState","validateZip","validateEmail","validatePhone","stateForInput","fullToAbbr","event","preventDefault","stopPropagation","setState","enablePayment","disablePayment","disableConfirmation","target","value","test","length","isNaN","generic","valid","emailRegex","toLowerCase","e","nextProps","nextState","nextStateImportant","thisStateImportant","input","casedInput","trim","toUpperCase","statesFullPos","indexOf","statesAbbrPos","full","index","Abbr"],"mappings":"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","sourcesContent":["// @flow\n\nimport React, { Component } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport ReactGA from 'react-ga';\n\nexport default class InformationForm extends Component {\n  componentDidMount() {\n    // TODO: Log ReactGA stuff here\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      validated: false,\n      name: '',\n      addr1: '',\n      addr2: '',\n      city: '',\n      state: '',\n      zip: '',\n      email: '',\n      phone: '+1 ',\n      contactAllowed: true,\n\n      nameValid: false,\n      addr1Valid: false,\n      addr2Valid: true,\n      cityValid: false,\n      stateValid: false,\n      zipValid: false,\n      emailValid: false,\n      phoneValid: false,\n\n      formChanged: false,\n      formValid: false\n    };\n\n    this.submit = this.submit.bind(this);\n    this.updateTabs = this.updateTabs.bind(this);\n    this.formValid = this.formValid.bind(this);\n\n    this.handleName = this.handleName.bind(this);\n    this.handleAddr1 = this.handleAddr1.bind(this);\n    this.handleAddr2 = this.handleAddr2.bind(this);\n    this.handleCity = this.handleCity.bind(this);\n    this.handleState = this.handleState.bind(this);\n    this.handleZip = this.handleZip.bind(this);\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handlePhone = this.handlePhone.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.validateGeneric = this.validateGeneric.bind(this);\n    this.validateState = this.validateState.bind(this);\n    this.validateZip = this.validateZip.bind(this);\n    this.validateEmail = this.validateEmail.bind(this);\n    this.validatePhone = this.validatePhone.bind(this);\n\n    this.stateForInput = this.stateForInput.bind(this);\n    this.fullToAbbr = this.fullToAbbr.bind(this);\n  }\n\n  submit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!this.state.validated) {\n      this.setState({ validated: true }, () => this.updateTabs());\n    } else {\n      this.updateTabs();\n    }\n  }\n\n  updateTabs() {\n    this.setState({ formValid: this.formValid() }, () => {\n      if (this.state.validated) {\n        if (this.state.formChanged) {\n          if (this.state.formValid) {\n            this.props.enablePayment();\n          } else {\n            this.props.disablePayment();\n            this.props.disableConfirmation();\n          }\n        }\n      }\n    });\n  }\n\n  formValid() {\n    return (\n      this.state.nameValid &&\n      this.state.addr1Valid &&\n      this.state.addr2Valid &&\n      this.state.cityValid &&\n      this.state.stateValid &&\n      this.state.zipValid &&\n      this.state.emailValid &&\n      this.state.phoneValid\n    );\n  }\n\n  handleName(name) {\n    if (this.state.name !== name) {\n      this.setState(\n        {\n          formChanged: true,\n          name: name.target.value,\n          nameValid: this.validateGeneric(name.target.value)\n        },\n        () => this.updateTabs()\n      );\n    }\n  }\n\n  handleAddr1(addr1) {\n    if (this.state.addr1 !== addr1) {\n      this.setState(\n        {\n          formChanged: true,\n          addr1: addr1.target.value,\n          addr1Valid: this.validateGeneric(addr1.target.value)\n        },\n        () => this.updateTabs()\n      );\n    }\n  }\n\n  handleAddr2(addr2) {\n    if (this.state.addr2 !== addr2) {\n      this.setState(\n        {\n          formChanged: true,\n          addr2: addr2.target.value,\n          addr2Valid: this.validateGeneric(addr2.target.value)\n        },\n        () => this.updateTabs()\n      );\n    }\n  }\n\n  handleCity(city) {\n    if (this.state.city !== city) {\n      if (!/\\d/.test(city.target.value)) {\n        this.setState(\n          {\n            formChanged: true,\n            city: city.target.value,\n            cityValid: this.validateGeneric(city.target.value)\n          },\n          () => this.updateTabs()\n        );\n      }\n    }\n  }\n\n  handleState(state) {\n    if (this.state.state !== state) {\n      if (!/\\d/.test(state.target.value)) {\n        if (state.target.value.length < 24) {\n          this.setState(\n            {\n              formChanged: true,\n              state: state.target.value,\n              stateValid: this.validateState(state.target.value)\n            },\n            () => this.updateTabs()\n          );\n        }\n      }\n    }\n  }\n\n  handleZip(zip) {\n    if (this.state.zip !== zip) {\n      if (zip.target.value.length < 6) {\n        if (!isNaN(zip.target.value)) {\n          this.setState(\n            {\n              formChanged: true,\n              zip: zip.target.value,\n              zipValid: this.validateZip(zip.target.value)\n            },\n            () => this.updateTabs()\n          );\n        }\n      }\n    }\n  }\n\n  handleEmail(email) {\n    if (this.state.email !== email) {\n      this.setState(\n        {\n          formChanged: true,\n          email: email.target.value,\n          emailValid: this.validateEmail(email.target.value)\n        },\n        () => this.updateTabs()\n      );\n    }\n  }\n\n  handlePhone(phone) {\n    if (this.state.phone !== phone) {\n      let value = phone.target.value;\n      if (value.length > 2 && value.length < 20) {\n        this.setState(\n          {\n            formChanged: true,\n            phone: value,\n            phoneValid: this.validatePhone(phone.target.value)\n          },\n          () => this.updateTabs()\n        );\n      }\n    }\n  }\n\n  handleCheck(contactAllowed) {\n    if (this.state.contactAllowed !== contactAllowed) {\n      this.setState({ contactAllowed: contactAllowed.target.value });\n    }\n  }\n\n  validateGeneric(generic) {\n    let valid = generic.length > 0 && isNaN(generic);\n    return valid;\n  }\n\n  validateState(state) {\n    let valid = !(this.stateForInput(state) == null);\n    return valid;\n  }\n\n  validateZip(zip) {\n    let valid = zip.length === 5 && !isNaN(zip);\n    return valid;\n  }\n\n  validateEmail(email) {\n    var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    let valid = emailRegex.test(email.toLowerCase());\n    return valid;\n  }\n\n  validatePhone(phone) {\n    return true;\n    let valid = phone.length === 19;\n    return valid;\n  }\n\n  render() {\n    return (\n      <Form\n        noValidate\n        validated={this.state.validated}\n        onSubmit={e => {\n          this.submit(e);\n        }}\n      >\n        <Form.Row>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Full Name / Organization</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"John Doe\"\n              value={this.state.name}\n              onChange={e => this.handleName(e)}\n              isValid={this.state.validated ? this.state.nameValid : null}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a valid name / organization.\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group controlId=\"addr1\">\n            <Form.Label>Address Line 1</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"12345 Artificial Dr\"\n              value={this.state.addr1}\n              onChange={e => this.handleAddr1(e)}\n              isValid={this.state.validated ? this.state.addr1Valid : null}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a valid address.\n            </Form.Control.Feedback>\n          </Form.Group>\n          &nbsp;\n          <Form.Group controlId=\"addr2\">\n            <Form.Label>Address Line 2</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Apt. 27\"\n              value={this.state.addr2}\n              onChange={e => this.handleAddr2(e)}\n              isValid={this.state.validated ? this.state.addr2Valid : null}\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group controlId=\"city\">\n            <Form.Label>City</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"City\"\n              value={this.state.city}\n              onChange={e => this.handleCity(e)}\n              isValid={this.state.validated ? this.state.cityValid : null}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a valid city.\n            </Form.Control.Feedback>\n          </Form.Group>\n          &nbsp;\n          <Form.Group controlId=\"state\">\n            <Form.Label>State</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"State\"\n              value={this.state.state}\n              onChange={e => this.handleState(e)}\n              isValid={this.state.validated ? this.state.stateValid : null}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a valid state.\n            </Form.Control.Feedback>\n          </Form.Group>\n          &nbsp;\n          <Form.Group controlId=\"zip\">\n            <Form.Label>Zip / Postal Code</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"12345\"\n              value={this.state.zip}\n              onChange={e => this.handleZip(e)}\n              isValid={this.state.validated ? this.state.zipValid : null}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a valid zip / postal code.\n            </Form.Control.Feedback>\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"example@domain.ext\"\n              value={this.state.email}\n              onChange={e => this.handleEmail(e)}\n              isValid={this.state.validated ? this.state.emailValid : null}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a valid email.\n            </Form.Control.Feedback>\n          </Form.Group>\n          &nbsp;\n          <Form.Group controlId=\"phone\">\n            <Form.Label>Phone Number</Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"+1 (123) 456 - 7890\"\n              value={this.state.phone}\n              onChange={e => this.handlePhone(e)}\n              isValid={this.state.validated ? this.state.phoneValid : null}\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Form.Group controlId=\"contactAllowed\">\n            <Form.Check\n              type=\"checkbox\"\n              label=\"Receive updates from donation recipients throughout the season\"\n              checked={this.state.contactAllowed}\n              onChange={e => this.handleCheck(e)}\n              isValid={this.state.validated ? true : null}\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Row>\n          <Button type=\"submit\">Submit</Button>\n        </Form.Row>\n      </Form>\n    );\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    let nextStateImportant = [\n      nextState.validated,\n      nextState.name,\n      nextState.addr1,\n      nextState.addr2,\n      nextState.city,\n      nextState.state,\n      nextState.zip,\n      nextState.email,\n      nextState.phone,\n      nextState.contactAllowed,\n      nextState.nameValid,\n      nextState.addr1Valid,\n      nextState.addr2Valid,\n      nextState.cityValid,\n      nextState.stateValid,\n      nextState.zipValid,\n      nextState.emailValid,\n      nextState.phoneValid\n    ];\n    let thisStateImportant = [\n      this.state.validated,\n      this.state.name,\n      this.state.addr1,\n      this.state.addr2,\n      this.state.city,\n      this.state.state,\n      this.state.zip,\n      this.state.email,\n      this.state.phone,\n      this.state.contactAllowed,\n      this.state.nameValid,\n      this.state.addr1Valid,\n      this.state.addr2Valid,\n      this.state.cityValid,\n      this.state.stateValid,\n      this.state.zipValid,\n      this.state.emailValid,\n      this.state.phoneValid\n    ];\n    return nextStateImportant !== thisStateImportant;\n  }\n\n  stateForInput(input) {\n    if (!(input == null)) {\n      let casedInput = input.trim().toUpperCase();\n      let statesFullPos = this.statesFull.indexOf(casedInput);\n      if (!(statesFullPos === -1)) {\n        return this.fullToAbbr(this.statesFull[statesFullPos]);\n      }\n\n      let statesAbbrPos = this.statesAbbr.indexOf(casedInput);\n      if (!(statesAbbrPos === -1)) {\n        return this.statesAbbr[statesAbbrPos];\n      }\n    }\n    return null;\n  }\n\n  fullToAbbr(full) {\n    let index = this.statesFull.indexOf(full);\n    if (index > -1) {\n      if (index < 50) {\n        return this.statesAbbr[index];\n      }\n      if (49 < index && index < 53) {\n        return this.statesAbbr[51];\n      }\n      if (52 < index && index < 55) {\n        return this.statesAbbr[50];\n      }\n      if (index === 55) {\n        return this.statesAbbr[52];\n      }\n      if (55 < index && index < 60) {\n        return this.statesAbbr[53];\n      }\n      if (index === 60) {\n        return this.statesAbbr[54];\n      }\n      if (60 < index && index < 63) {\n        return this.Abbr[55];\n      }\n    }\n    return null;\n  }\n\n  statesFull = [\n    'ALABAMA',\n    'ALASKA',\n    'ARIZONA',\n    'ARKANSAS',\n    'CALIFORNIA',\n    'COLORADO',\n    'CONNECTICUT',\n    'DELAWARE',\n    'FLORIDA',\n    'GEORGIA',\n    'HAWAII',\n    'IDAHO',\n    'ILLINOIS',\n    'INDIANA',\n    'IOWA',\n    'KANSAS',\n    'KENTUCKY',\n    'LOUISIANA',\n    'MAINE',\n    'MARYLAND',\n    'MASSACHUSETTS',\n    'MICHIGAN',\n    'MINNESOTA',\n    'MISSISSIPPI',\n    'MISSOURI',\n    'MONTANA',\n    'NEBRASKA',\n    'NEVADA',\n    'NEW HAMPSHIRE',\n    'NEW JERSEY',\n    'NEW MEXICO',\n    'NEW YORK',\n    'NORTH CAROLINA',\n    'NORTH DAKOTA',\n    'OHIO',\n    'OKLAHOMA',\n    'OREGON',\n    'PENNSYLVANIA',\n    'RHODE ISLAND',\n    'SOUTH CAROLINA',\n    'SOUTH DAKOTA',\n    'TENNESSEE',\n    'TEXAS',\n    'UTAH',\n    'VERMONT',\n    'VIRGINIA',\n    'WASHINGTON',\n    'WEST VIRGINIA',\n    'WISCONSIN',\n    'WYOMING',\n    'WASHINGTON DC',\n    'WASHINGTON D.C.',\n    'DISTRICT OF COLUMBIA',\n    'AMERICAN SAMOA',\n    'SAMOA',\n    'GUAM',\n    'NORTHERN MARIANA ISLANDS',\n    'NORTHERN MARIANA',\n    'MARIANA ISLANDS',\n    'MARIANA',\n    'PUERTO RICO',\n    'VIRGIN ISLANDS',\n    'VIRGIN'\n  ];\n\n  statesAbbr = [\n    'AL',\n    'AK',\n    'AZ',\n    'AR',\n    'CA',\n    'CO',\n    'CT',\n    'DE',\n    'FL',\n    'GA',\n    'HI',\n    'ID',\n    'IL',\n    'IN',\n    'IA',\n    'KS',\n    'KY',\n    'LA',\n    'ME',\n    'MD',\n    'MA',\n    'MI',\n    'MN',\n    'MS',\n    'MO',\n    'MT',\n    'NE',\n    'NV',\n    'NH',\n    'NJ',\n    'NM',\n    'NY',\n    'NC',\n    'ND',\n    'OH',\n    'OK',\n    'OR',\n    'PA',\n    'RI',\n    'SC',\n    'SD',\n    'TN',\n    'TX',\n    'UT',\n    'VT',\n    'VA',\n    'WA',\n    'WV',\n    'WI',\n    'WY',\n    'AS',\n    'DC',\n    'GU',\n    'MP',\n    'PR',\n    'VI'\n  ];\n}\n"]},"metadata":{},"sourceType":"module"}