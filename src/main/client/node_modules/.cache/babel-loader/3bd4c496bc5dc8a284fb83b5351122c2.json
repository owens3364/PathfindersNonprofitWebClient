{"ast":null,"code":"import _classCallCheck from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/src/components/views/Donate/PaymentForm.js\";\nimport React, { Component } from 'react';\nimport { Form, DropdownButton, Dropdown } from 'react-bootstrap';\nvar allInvalidError = \"Please enter a valid amount and payment type.\";\nvar amountInvalidError = \"Please enter a valid amount\";\nvar paymentTypeInvalidError = \"Please enter a valid payment type\";\n\nvar PaymentForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PaymentForm, _Component);\n\n  _createClass(PaymentForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// TODO: Log ReactGA stuff here\n    }\n  }]);\n\n  function PaymentForm(props) {\n    var _this;\n\n    _classCallCheck(this, PaymentForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PaymentForm).call(this, props));\n    _this.state = {\n      validated: false,\n      paymentType: \"Payment type\",\n      paymentValid: false,\n      amount: \"\",\n      amountValid: false,\n      formChanged: false,\n      formValid: false,\n      error: allInvalidError\n    };\n    return _this;\n  }\n\n  _createClass(PaymentForm, [{\n    key: \"submit\",\n    value: function submit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (!this.state.validated) {\n        this.setState({\n          validated: true\n        }, function () {\n          return _this2.updateTabs();\n        });\n      } else {\n        this.updateTabs();\n      }\n    }\n  }, {\n    key: \"updateTabs\",\n    value: function updateTabs() {\n      var _this3 = this;\n\n      this.setState({\n        formValid: this.formValid()\n      }, function () {\n        if (_this3.state.validated) {\n          if (_this3.state.formChanged) {\n            _this3.state.formValid ? _this3.props.enableConfirmation() : _this3.props.disableConfirmation();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"formValid\",\n    value: function formValid() {\n      return this.state.paymentValid && this.state.amountValid;\n    }\n  }, {\n    key: \"handleAmount\",\n    value: function handleAmount(amount) {\n      var _this4 = this;\n\n      if (this.state.amount !== amount.target.value) {\n        if (!isNaN(amount.target.value)) {\n          var amountValid = this.validateAmount(amount.target.value);\n          this.setState({\n            formChanged: true,\n            amount: amount.target.value,\n            amountValid: amountValid,\n            error: amountValid ? paymentTypeInvalidError : allInvalidError\n          }, function () {\n            return _this4.updateTabs();\n          });\n        }\n      }\n    }\n  }, {\n    key: \"validateAmount\",\n    value: function validateAmount(amount) {\n      var amountRegex = /^\\$?[0-9]+(\\.[0-9][0-9])?$/;\n      return amountRegex.test(amount.trim());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"paymentType\",\n        title: this.state.paymentType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onSelect: function onSelect() {\n          return _this5.setState({\n            paymentType: \"Credit / Debit\",\n            paymentValid: true,\n            error: amountInvalidError\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Credit / Debit\"), React.createElement(Dropdown.Item, {\n        onSelect: function onSelect() {\n          return _this5.setState({\n            paymentType: \"IBAN\",\n            paymentValid: true,\n            error: amountInvalidError\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"IBAN\"), React.createElement(Dropdown.Item, {\n        onSelect: function onSelect() {\n          return _this5.setState({\n            paymentType: \"iDEAL\",\n            paymentValid: true,\n            error: amountInvalidError\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"iDEAL\"), React.createElement(Dropdown.Item, {\n        onSelect: function onSelect() {\n          return _this5.setState({\n            paymentType: \"Apple / Google Pay\",\n            paymentValid: true,\n            error: amountInvalidError\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Apple / Google Pay\")), React.createElement(Form, {\n        noValidate: true,\n        validated: this.state.validated,\n        onSubmit: function onSubmit(e) {\n          return _this5.submit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Amount (USD)\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"12.34\",\n        value: this.state.amonut,\n        onChange: function onChange(e) {\n          return _this5.handleAmount(e);\n        },\n        isValid: this.state.validated ? this.state.amountValid && this.state.paymentValid : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.state.error)))));\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var nextStateImportant = [nextState.validated, nextState.amount, nextState.paymentType, nextState.amountValid, nextState.paymentValid, nextState.error];\n      var thisStateImportant = [this.state.validated, this.state.amount, this.state.amountValid, this.state.paymentType, this.state.paymentValid, this.state.error];\n      return nextStateImportant !== thisStateImportant;\n    }\n  }]);\n\n  return PaymentForm;\n}(Component);\n\nexport { PaymentForm as default };","map":{"version":3,"sources":["/Users/OwenScott/FTC/PATHFINDERS ROBOTICS/Web Services/pathfinders/src/main/client/src/components/views/Donate/PaymentForm.js"],"names":["React","Component","Form","DropdownButton","Dropdown","allInvalidError","amountInvalidError","paymentTypeInvalidError","PaymentForm","props","state","validated","paymentType","paymentValid","amount","amountValid","formChanged","formValid","error","event","preventDefault","stopPropagation","setState","updateTabs","enableConfirmation","disableConfirmation","target","value","isNaN","validateAmount","amountRegex","test","trim","e","submit","amonut","handleAmount","nextProps","nextState","nextStateImportant","thisStateImportant"],"mappings":"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","sourcesContent":["// @flow\n\nimport React, {Component} from 'react';\nimport {Form, DropdownButton, Dropdown} from 'react-bootstrap';\n\nconst allInvalidError = \"Please enter a valid amount and payment type.\";\nconst amountInvalidError = \"Please enter a valid amount\";\nconst paymentTypeInvalidError = \"Please enter a valid payment type\";\n\nexport default class PaymentForm extends Component {\n    componentDidMount() {\n        // TODO: Log ReactGA stuff here\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            validated: false,\n            paymentType: \"Payment type\",\n            paymentValid: false,\n            amount: \"\",\n            amountValid: false,\n            formChanged: false,\n            formValid: false,\n            error: allInvalidError\n        };\n\n        \n    }\n\n    submit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!this.state.validated) {\n            this.setState({ validated: true }, () => this.updateTabs());\n        } else {\n            this.updateTabs();\n        }\n    }\n\n    updateTabs() {\n        this.setState({ formValid: this.formValid() }, () => {\n            if (this.state.validated) {\n                if (this.state.formChanged) {\n                    this.state.formValid ? this.props.enableConfirmation() : this.props.disableConfirmation();\n                }\n            }\n        });\n    }\n\n    formValid() {\n        return this.state.paymentValid && this.state.amountValid;\n    }\n\n    handleAmount(amount) {\n        if (this.state.amount !== amount.target.value) {\n            if (!isNaN(amount.target.value)) {\n                let amountValid = this.validateAmount(amount.target.value);\n                this.setState(\n                    {\n                        formChanged: true,\n                        amount: amount.target.value,\n                        amountValid: amountValid,\n                        error: amountValid ? paymentTypeInvalidError : allInvalidError\n                    },\n                    () => this.updateTabs()\n                );\n            }\n        }\n    }\n\n    validateAmount(amount) {\n        const amountRegex = /^\\$?[0-9]+(\\.[0-9][0-9])?$/;\n        return amountRegex.test(amount.trim());\n    }\n\n    render() {\n        return (\n            <div>\n            <DropdownButton id=\"paymentType\" title={this.state.paymentType}>\n                <Dropdown.Item onSelect={() => this.setState(\n                    {\n                        paymentType: \"Credit / Debit\",\n                        paymentValid: true,\n                        error: amountInvalidError\n                    }\n                    )}>Credit / Debit</Dropdown.Item>\n                <Dropdown.Item onSelect={() => this.setState(\n                    {\n                        paymentType: \"IBAN\",\n                        paymentValid: true,\n                        error: amountInvalidError\n                    }\n                    )}>IBAN</Dropdown.Item>\n                <Dropdown.Item onSelect={() => this.setState(\n                    {\n                        paymentType: \"iDEAL\",\n                        paymentValid: true,\n                        error: amountInvalidError\n                    }\n                    )}>iDEAL</Dropdown.Item>\n                <Dropdown.Item onSelect={() => this.setState(\n                    {\n                        paymentType: \"Apple / Google Pay\",\n                        paymentValid: true,\n                        error: amountInvalidError\n                    }\n                    )}>Apple / Google Pay</Dropdown.Item>\n            </DropdownButton>\n            <Form\n                noValidate\n                validated={this.state.validated}\n                onSubmit={e => this.submit(e)}\n            >\n                <Form.Row>\n                    <Form.Group controlId=\"amount\">\n                        <Form.Label>Amount (USD)</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"12.34\"\n                            value={this.state.amonut}\n                            onChange={e => this.handleAmount(e)}\n                            isValid={this.state.validated ? this.state.amountValid && this.state.paymentValid : null}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {this.state.error}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n            </Form>\n            </div>\n        );\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        let nextStateImportant = [\n            nextState.validated,\n            nextState.amount,\n            nextState.paymentType,\n            nextState.amountValid,\n            nextState.paymentValid,\n            nextState.error\n        ];\n        let thisStateImportant = [\n            this.state.validated,\n            this.state.amount,\n            this.state.amountValid,\n            this.state.paymentType,\n            this.state.paymentValid,\n            this.state.error\n        ];\n        return nextStateImportant !== thisStateImportant;\n    }\n}"]},"metadata":{},"sourceType":"module"}